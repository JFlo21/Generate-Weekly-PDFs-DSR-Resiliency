name: Weekly Excel Generation with Sentry Monitoring (Every 2 Hours + Weekly)

permissions:
  contents: read

on:
  schedule:
    - cron: '0 13,15,17,19,21,23,1 * * 1-5'
    - cron: '0 15,19,23 * * 0,6'
    - cron: '0 5 * * 1'
  workflow_dispatch:
    inputs:
      # Basic Operation Controls
      test_mode:
        description: 'Run in test mode (true/false)'
        required: false
        default: 'false'
        type: choice
        options: ['false','true']
      force_generation:
        description: 'Force generate even if no eligible data'
        required: false
        default: 'false'
        type: choice
        options: ['false','true']
      cleanup_only:
        description: 'Only cleanup stale Excel files (no generation)'
        required: false
        default: 'false'
        type: choice
        options: ['false','true']
      
      # Logging & Debug Controls
      quiet_logging:
        description: 'Enable quiet logging (reduces output)'
        required: false
        default: 'false'
        type: choice
        options: ['false','true']
      per_cell_debug_enabled:
        description: 'Enable per-cell debug logging'
        required: false
        default: 'false'
        type: choice
        options: ['false','true']
      log_unknown_columns:
        description: 'Log unmapped columns summary'
        required: false
        default: 'false'
        type: choice
        options: ['false','true']
      filter_diagnostics:
        description: 'Enable filter diagnostics logging'
        required: false
        default: 'false'
        type: choice
        options: ['false','true']
      foreman_diagnostics:
        description: 'Enable foreman diagnostics logging'
        required: false
        default: 'false'
        type: choice
        options: ['false','true']
      
      # Performance & Caching
      use_discovery_cache:
        description: 'Use discovery cache for faster processing'
        required: false
        default: 'true'
        type: choice
        options: ['true','false']
      discovery_cache_ttl_min:
        description: 'Discovery cache TTL in minutes'
        required: false
        default: '60'
        type: string
      skip_cell_history:
        description: 'Skip cell history for faster processing'
        required: false
        default: 'true'
        type: choice
        options: ['true','false']
      
      # Change Detection & History
      extended_change_detection:
        description: 'Enable extended change detection (includes foreman, dept, etc.)'
        required: false
        default: 'true'
        type: choice
        options: ['true','false']
      history_skip_enabled:
        description: 'Enable hash-based skip logic'
        required: false
        default: 'true'
        type: choice
        options: ['true','false']
      attachment_required_for_skip:
        description: 'Require attachment present for skip'
        required: false
        default: 'true'
        type: choice
        options: ['true','false']
      keep_historical_weeks:
        description: 'Preserve attachments for historical weeks'
        required: false
        default: 'false'
        type: choice
        options: ['false','true']
      
      # Reset & Cleanup Options
      reset_hash_history:
        description: 'Reset hash history and regenerate all files'
        required: false
        default: 'false'
        type: choice
        options: ['false','true']
      
      # Advanced Filters & Limits
      wr_filter:
        description: 'Comma-separated list of Work Request numbers to process (empty = all)'
        required: false
        default: ''
        type: string
      max_groups:
        description: 'Maximum number of groups to process (0 = unlimited)'
        required: false
        default: '0'
        type: string
      regen_weeks:
        description: 'Comma-separated list of MMDDYY week codes to regenerate'
        required: false
        default: ''
        type: string
      reset_wr_list:
        description: 'Comma-separated list of WR numbers to reset (overrides full reset)'
        required: false
        default: ''
        type: string
      
      # Debug Limits
      debug_sample_rows:
        description: 'Number of sample rows for debug logging'
        required: false
        default: '1'
        type: string
      debug_essential_rows:
        description: 'Number of essential rows for debug logging'
        required: false
        default: '5'
        type: string
      unmapped_column_sample_limit:
        description: 'Sample limit for unmapped columns'
        required: false
        default: '5'
        type: string

env:
  TZ: America/Chicago

jobs:
  core:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      PYTHONUNBUFFERED: 1
      GITHUB_ACTIONS: 'true'
      SKIP_CELL_HISTORY: 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Determine execution type
        id: exec
        run: |
          day=$(TZ=America/Chicago date +%w)
          hour=$(TZ=America/Chicago date +%H)
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then t=manual
          elif [ $day -ge 1 ] && [ $day -le 5 ]; then t=production_frequent
          elif [ $day -eq 0 ] || [ $day -eq 6 ]; then t=weekend_maintenance
          else t=scheduled; fi
          if [ $day -eq 1 ] && [ $hour -eq 23 ]; then t=weekly_comprehensive; fi
          echo "execution_type=$t" >> $GITHUB_OUTPUT
          echo "should_run=true" >> $GITHUB_OUTPUT
      - name: Generate reports
        if: steps.exec.outputs.should_run == 'true' && github.event.inputs.cleanup_only != 'true'
        env:
          SMARTSHEET_API_TOKEN: ${{ secrets.SMARTSHEET_API_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          ENVIRONMENT: production
          RELEASE: ${{ github.sha }}
          EXECUTION_TYPE: ${{ steps.exec.outputs.execution_type }}
          
          # Basic Operation Controls
          TEST_MODE: ${{ github.event.inputs.test_mode || 'false' }}
          FORCE_GENERATION: ${{ github.event.inputs.force_generation || 'false' }}
          
          # Logging & Debug Controls
          QUIET_LOGGING: ${{ github.event.inputs.quiet_logging || 'false' }}
          PER_CELL_DEBUG_ENABLED: ${{ github.event.inputs.per_cell_debug_enabled || 'false' }}
          LOG_UNKNOWN_COLUMNS: ${{ github.event.inputs.log_unknown_columns || 'false' }}
          FILTER_DIAGNOSTICS: ${{ github.event.inputs.filter_diagnostics || 'false' }}
          FOREMAN_DIAGNOSTICS: ${{ github.event.inputs.foreman_diagnostics || 'false' }}
          
          # Performance & Caching
          USE_DISCOVERY_CACHE: ${{ github.event.inputs.use_discovery_cache || 'true' }}
          DISCOVERY_CACHE_TTL_MIN: ${{ github.event.inputs.discovery_cache_ttl_min || '60' }}
          SKIP_CELL_HISTORY: ${{ github.event.inputs.skip_cell_history || 'true' }}
          
          # Change Detection & History
          EXTENDED_CHANGE_DETECTION: ${{ github.event.inputs.extended_change_detection || 'true' }}
          HISTORY_SKIP_ENABLED: ${{ github.event.inputs.history_skip_enabled || 'true' }}
          ATTACHMENT_REQUIRED_FOR_SKIP: ${{ github.event.inputs.attachment_required_for_skip || 'true' }}
          KEEP_HISTORICAL_WEEKS: ${{ github.event.inputs.keep_historical_weeks || 'false' }}
          
          # Reset & Cleanup Options
          RESET_HASH_HISTORY: ${{ github.event.inputs.reset_hash_history || 'false' }}
          
          # Advanced Filters & Limits
          WR_FILTER: ${{ github.event.inputs.wr_filter || '' }}
          MAX_GROUPS: ${{ github.event.inputs.max_groups || '0' }}
          REGEN_WEEKS: ${{ github.event.inputs.regen_weeks || '' }}
          RESET_WR_LIST: ${{ github.event.inputs.reset_wr_list || '' }}
          
          # Debug Limits
          DEBUG_SAMPLE_ROWS: ${{ github.event.inputs.debug_sample_rows || '1' }}
          DEBUG_ESSENTIAL_ROWS: ${{ github.event.inputs.debug_essential_rows || '5' }}
          UNMAPPED_COLUMN_SAMPLE_LIMIT: ${{ github.event.inputs.unmapped_column_sample_limit || '5' }}
        run: python generate_weekly_pdfs.py
      - name: Cleanup only
        if: steps.exec.outputs.should_run == 'true' && github.event.inputs.cleanup_only == 'true'
        run: |
          python cleanup_excels.py
      - name: Upload artifacts
        if: always() && steps.exec.outputs.should_run == 'true' && github.event.inputs.cleanup_only != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: excel-reports-${{ steps.exec.outputs.execution_type }}-${{ github.run_number }}
          path: generated_docs/
          retention-days: 15
      - name: Summary
        if: always()
        run: |
          echo "Execution Type: ${{ steps.exec.outputs.execution_type }}"
          echo "Test Mode: ${{ github.event.inputs.test_mode }}"
          echo "Cleanup Only: ${{ github.event.inputs.cleanup_only }}"
          if [ -d generated_docs ]; then ls -1 generated_docs | head -n 25; fi
